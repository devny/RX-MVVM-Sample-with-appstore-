disabled_rules: # rule identifiers to exclude from running
  - colon
  - comma
  - control_statement
  - trailing_whitespace
  - missing_docs
  - large_tuple
  - void_return
  - function_parameter_count
  - cyclomatic_complexity
  - redundant_optional_initialization
  - empty_count
  - identifier_name
  - redundant_discardable_let
opt_in_rules: # some rules are only opt-in
  - empty_count
  - missing_docs
included: # paths to include during linting. `--path` is ignored if present.
  - AppStore
excluded: # paths to ignore during linting. Takes precedence over `included`.
  - Pods

# configurable rules can be customized from this configuration file
# binary rules can set their severity level
force_cast: warning # implicitly
force_try:
  severity: warning # explicitly
# rules that have both warning and error levels, can set just the warning level
# implicitly
line_length: 300
function_body_length:
  - 60
  - 100
# they can set both implicitly with an array
type_body_length:
  - 250 # warning
  - 400 # error
# or they can set both explicitly
file_length:
  warning: 400
  error: 450
# naming rules can set warnings/errors for min_length and max_length
# additionally they can set excluded names
type_name:
  min_length: 4 # only warning
  max_length: # warning and error
    warning: 50
    error: 60
  excluded: iPhone # excluded via string
identifier_name:
  min_length: # only min_length
    error: 4 # only error
  excluded: # excluded via string array
    - id
    - URL
    - GlobalAPIKey
    - Enum element
identifier_name:
  min_length:
    warning: 1
    error: 1
custom_rules:
  use_dblog:
    included: ".*.swift"
    name: "Use KKBLog"
    regex: "((pritn|NSLog))"
    message: "Use KKBLog. Not Print or NSLog"
    severity: error
reporter: "xcode" # reporter type (xcode, json, csv, checkstyle, junit, html, emoji)
